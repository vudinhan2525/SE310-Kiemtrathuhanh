@model List<MVCApp.Models.Food>
@{
    ViewData["Title"] = "Home Page";
}

<div class=" px-12 ">
    <div class="flex items-center justify-between w-full">
        <h2 class="text-3xl">Food List</h2>
        <div id="openModalBtn" class="px-2 py-2 rounded-md text-white bg-blue-600 font-bold text-sm cursor-pointer ">Thêm món ăn</div>
    </div>
    <div class="flex items-center gap-4 mt-4">
        <div data-type="mon-mi" class="food-type-btn px-2 py-2 rounded-md border-[1px] cursor-pointer hover:bg-gray-300">Món mì</div>
        <div data-type="com" class=" food-type-btn px-2 py-2 rounded-md border-[1px] cursor-pointer hover:bg-gray-300">Cơm</div>
        <div data-type="mon-vat" class=" food-type-btn px-2 py-2 rounded-md border-[1px] cursor-pointer hover:bg-gray-300">Món vặt</div>
    </div>
    <div id="foodListContainer" class="grid grid-cols-4 gap-8 mt-4">
        @foreach (var food in Model) 
        {
            <a href="/Food/@food.Id" class="px-4 cursor-pointer transition-all hover:scale-105 rounded-md py-4   border-[1px]">
                    <div class="w-full rounded-md overflow-hidden  h-[200px] bg-cover bg-center bg-no-repeat" style="background-image: url('@food.Image');">

                </div>
                <div class="text-2xl font-bold mt-2">@food.Name</div>
                <div class="text-sm text-gray-500 font-semibold line-clamp-4">@food.Description</div>
                <div>Price : @food.Price.ToString("F0") vnđ</div>
                <div>Item left : @food.ItemLeft</div>
            </a>
        }
    </div>
</div>
<div id="foodModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg p-6 w-[500px]">
        <h3 class="text-xl font-bold mb-4">Thêm món ăn mới</h3>
        <form id="addFoodForm" method="post" action="/Food/Add">
            <div class="mb-4">
                <label for="foodName" class="block text-gray-700">Tên món ăn</label>
                <input type="text" id="foodName" name="Name" class="border border-gray-300 rounded-md w-full p-2">
            </div>
            <div class="mb-4">
                <label for="foodImage" class="block text-gray-700">Hình ảnh (URL)</label>
                <input type="text" id="foodImage" name="Image" class="border border-gray-300 rounded-md w-full p-2">
            </div>
            <div class="mb-4">
                <label for="foodDescription" class="block text-gray-700">Mô tả</label>
                <textarea id="foodDescription" name="Description" class="border border-gray-300 rounded-md w-full p-2"></textarea>
            </div>
            <div class="mb-4">
                <label for="foodPrice" class="block text-gray-700">Giá (VNĐ)</label>
                <input type="number" id="foodPrice" name="Price" class="border border-gray-300 rounded-md w-full p-2">
            </div>
            <div class="mb-4">
                <label for="foodPrice" class="block text-gray-700">Item left</label>
                <input type="number" id="itemLeft" name="itemLeft" class="border border-gray-300 rounded-md w-full p-2">
            </div>
            <div class="flex justify-end">
                <button type="button" id="closeModalBtn" class="mr-4 px-4 py-2 text-gray-700 bg-gray-300 rounded-md">Hủy</button>
                <button type="submit" class="px-4 py-2 text-white bg-blue-600 rounded-md">Thêm</button>
            </div>
        </form>
    </div>
</div>
<script>
    const foodList = @Html.Raw(Json.Serialize(Model));
    console.log(foodList); 
    // how i can log the food list here
    const openModalBtn = document.getElementById('openModalBtn');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const foodModal = document.getElementById('foodModal');

    openModalBtn.addEventListener('click', function() {
        foodModal.classList.remove('hidden');
    });

    closeModalBtn.addEventListener('click', function() {
        foodModal.classList.add('hidden');
    });
    addFoodForm.addEventListener('submit', async function(event) {
        event.preventDefault();
        const formData = new FormData(addFoodForm);
        const response = await fetch('/Food/Add', {
            method: 'POST',
            body: formData,
        });

        if (response.ok) {
            alert('Food added successfully!');
            foodModal.classList.add('hidden'); 
            window.location.reload(); 
        } else {
            alert('Failed to add food. Please try again.');
        }
    });
</script>
<script>
    const foodListContainer = document.getElementById('foodListContainer');

    document.querySelectorAll('.food-type-btn').forEach(button => {
        button.addEventListener('click', async function() {
            const foodType = this.getAttribute('data-type');

            try {
                const response = await fetch('/Food/GetFoodType', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ Type: foodType })
                });
                if (response.ok) {
                    const foods = await response.json();
                    updateFoodList(foods);
                } else {
                    alert('Failed to fetch food items');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error fetching food items');
            }
        });
    });

    function updateFoodList(foods) {
        foodListContainer.innerHTML = ''; 

        foods.forEach(food => {
            const foodItem = document.createElement('a');
            foodItem.href = `/Food/${food.id}`;
            foodItem.className = 'food-item px-4 cursor-pointer transition-all hover:scale-105 rounded-md py-4 border-[1px]';
            foodItem.innerHTML = `
                <div class="w-full rounded-md overflow-hidden h-[200px] bg-cover bg-center bg-no-repeat" style="background-image: url('${food.image}');"></div>
                <div class="text-2xl font-bold mt-2">${food.name}</div>
                <div class="text-sm text-gray-500 font-semibold line-clamp-4">${food.description}</div>
                <div>Price: ${food.price} vnđ</div>
                <div>Item left: ${food.itemLeft}</div>
            `;
            foodListContainer.appendChild(foodItem);
        });
    }
</script>